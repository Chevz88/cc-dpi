name: Android CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Java environment
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          build-tools-version: "34.0.0"
          api-level: 34

      - name: Install Gradle with SDKMAN!
        run: |
          # Install SDKMAN!
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          
          # Install Gradle 8.0
          sdk install gradle 8.0
          
          # Verify installation
          gradle --version

      - name: Create proper settings.gradle
        run: |
          cat > settings.gradle <<EOF
pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
    }
}
rootProject.name = "cc-dpi"
include ':app'
EOF

      - name: Create root build.gradle
        run: |
          cat > build.gradle <<EOF
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:8.0.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.22"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
EOF

      - name: Restructure project
        run: |
          # Create standard Android structure
          mkdir -p app/src/main
          
          # Move existing files to standard structure
          if [ -d "CC-DPI-App" ]; then
            mv CC-DPI-App/app/build.gradle app/
            mv CC-DPI-App/app/src/* app/src/main/
            rm -rf CC-DPI-App
          fi

      - name: Build Android project
        run: |
          gradle :app:assembleDebug --stacktrace

      - name: Find Debug APK
        id: find_apk
        run: |
          debug_apk=$(find app/build/outputs/apk -name "*debug*.apk" | head -1)
          if [ -z "$debug_apk" ]; then
            echo "APK not found! Project structure:"
            find . -maxdepth 3 -type d -print | sort
            exit 1
          fi
          echo "debug_apk=${debug_apk}" >> $GITHUB_OUTPUT
          echo "Debug APK: ${debug_apk}"

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: ${{ steps.find_apk.outputs.debug_apk }}
