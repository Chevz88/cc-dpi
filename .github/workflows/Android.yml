name: Android CI/CD

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'  # Handle release tags
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:  # Tambahkan untuk trigger manual

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Clean project
        run: ./gradlew clean

      - name: Run tests and lint
        run: |
          ./gradlew test --continue
          ./gradlew lint

      - name: Detect main module
        id: detect_module
        run: |
          if ./gradlew projects | grep -q "project ':CC-DPI-App:app'"; then
            echo "main_module=:CC-DPI-App:app" >> $GITHUB_OUTPUT
          elif ./gradlew projects | grep -q "project ':app'"; then
            echo "main_module=:app" >> $GITHUB_OUTPUT
          else
            echo "main_module=" >> $GITHUB_OUTPUT
          fi

      - name: Build Debug APK
        run: |
          if [ -z "${{ steps.detect_module.outputs.main_module }}" ]; then
            ./gradlew assembleDebug
          else
            ./gradlew ${{ steps.detect_module.outputs.main_module }}:assembleDebug
          fi

      - name: Build Release APK
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
        run: |
          if [ -z "${{ steps.detect_module.outputs.main_module }}" ]; then
            ./gradlew assembleRelease
          else
            ./gradlew ${{ steps.detect_module.outputs.main_module }}:assembleRelease
          fi

      - name: Find APK files
        id: find_apk
        run: |
          debug_apk=$(find . -path "*/build/outputs/apk/debug/*-debug.apk" -type f -print -quit)
          release_apk=$(find . -path "*/build/outputs/apk/release/*-release.apk" -type f -print -quit)
          
          echo "debug_apk=${debug_apk}" >> $GITHUB_OUTPUT
          echo "release_apk=${release_apk}" >> $GITHUB_OUTPUT

      - name: Upload Debug APK
        if: steps.find_apk.outputs.debug_apk
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk-${{ github.run_number }}
          path: ${{ steps.find_apk.outputs.debug_apk }}

      - name: Upload Release APK
        if: steps.find_apk.outputs.release_apk && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
        uses: actions/upload-artifact@v4
        with:
          name: release-apk-${{ github.run_number }}
          path: ${{ steps.find_apk.outputs.release_apk }}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_number }}
          path: |
            **/build/reports/tests/**
            **/build/test-results/**

      - name: Upload Lint Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-results-${{ github.run_number }}
          path: |
            **/build/reports/lint-results*.html
            **/build/reports/lint-results*.xml

      - name: Comment PR with Build Status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          DEBUG_APK: ${{ steps.find_apk.outputs.debug_apk }}
          BUILD_STATUS: ${{ job.status }}
        with:
          script: |
            const { DEBUG_APK, BUILD_STATUS } = process.env;
            const message = BUILD_STATUS === 'success' 
              ? `✅ Build berhasil! [Download APK](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})` 
              : '❌ Build gagal! Periksa log untuk detailnya';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Build Result #${{ github.run_number }}\n${message}`
            });

  release:
    name: Create Release
    needs: [build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || contains(github.event.head_commit.message, '[release]')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Release APK
        uses: actions/download-artifact@v4
        with:
          pattern: release-apk-*
          path: ./release/

      - name: Get version
        id: get_version
        run: |
          if [[ "$GITHUB_REF" == refs/tags/v* ]]; then
            version=${GITHUB_REF#refs/tags/v}
          else
            version=$(grep 'versionName' app/build.gradle | cut -d '"' -f 2 || echo "1.0.0")
          fi
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          body: "Production Release 🚀"
          files: ./release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
