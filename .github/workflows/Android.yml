name: Android CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          clean: true

      - name: Setup Java environment
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Identify project structure
        id: project_structure
        run: |
          # Cari modul Android utama
          if [ -d "CC-DPI-App/app" ]; then
            echo "project_path=CC-DPI-App" >> $GITHUB_OUTPUT
          elif [ -d "app" ]; then
            echo "project_path=." >> $GITHUB_OUTPUT
          else
            echo "project_path=unknown" >> $GITHUB_OUTPUT
          fi
          
          echo "Project path: ${{ steps.project_structure.outputs.project_path }}"

      - name: Build with Gradle
        run: |
          cd ${{ steps.project_structure.outputs.project_path }}
          
          # Install Gradle jika belum ada
          if ! command -v gradle &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y gradle
          fi
          
          # Jalankan build di lokasi yang benar
          gradle tasks --all || true
          gradle clean assembleDebug

      - name: Find Debug APK
        id: find_apk
        run: |
          # Cari APK di lokasi yang sesuai dengan struktur proyek
          if [ "${{ steps.project_structure.outputs.project_path }}" = "CC-DPI-App" ]; then
            debug_apk=$(find CC-DPI-App -name "*debug*.apk" | head -1)
          else
            debug_apk=$(find . -name "*debug*.apk" | head -1)
          fi
          
          if [ -z "$debug_apk" ]; then
            echo "APK not found! Project structure:"
            find . -maxdepth 3 -type d -print | sort
            exit 1
          fi
          
          echo "debug_apk=${debug_apk}" >> $GITHUB_OUTPUT
          echo "Debug APK: ${debug_apk}"

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: ${{ steps.find_apk.outputs.debug_apk }}
