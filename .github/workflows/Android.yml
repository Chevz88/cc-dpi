name: Android CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  build:
    name: Build & Upload Debug APK
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Install Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools-version: 34.0.0

      - name: Setup Gradle Configuration
        run: |
          # Membuat file build.gradle dan settings.gradle dengan package yang benar
          echo "Creating build.gradle and settings.gradle with corrected package..."

          # settings.gradle
          cat > settings.gradle <<EOF
          pluginManagement {
              repositories {
                  google()
                  mavenCentral()
                  gradlePluginPortal()
              }
          }
          dependencyResolutionManagement {
              repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
              repositories {
                  google()
                  mavenCentral()
              }
          }
          rootProject.name = "cc-dpi"
          include ':app'
          EOF
          
          # app/build.gradle - Perbaikan: package disesuaikan dengan manifest (com.pekerja.app)
          mkdir -p app
          cat > app/build.gradle <<EOF
          plugins {
              id 'com.android.application'
              id 'org.jetbrains.kotlin.android'
          }
          
          android {
              namespace 'com.pekerja.app'
              compileSdk 34
              
              defaultConfig {
                  applicationId "com.pekerja.app"
                  minSdk 24
                  targetSdk 34
                  versionCode 1
                  versionName "1.0"
                  
                  testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
              }
              
              buildTypes {
                  debug {
                      minifyEnabled false
                      signingConfig signingConfigs.debug
                  }
              }
              
              buildFeatures {
                  buildConfig true
              }
              
              compileOptions {
                  sourceCompatibility JavaVersion.VERSION_17
                  targetCompatibility JavaVersion.VERSION_17
              }
              kotlinOptions {
                  jvmTarget = '17'
              }
          }
          
          dependencies {
              implementation 'androidx.core:core-ktx:1.12.0'
              implementation 'androidx.appcompat:appcompat:1.6.1'
              
              testImplementation 'junit:junit:4.13.2'
              androidTestImplementation 'androidx.test.ext:junit:1.1.5'
          }
          EOF
          
          # build.gradle (project level) - Update Android Gradle Plugin ke 8.2.0
          cat > build.gradle <<EOF
          buildscript {
              repositories {
                  google()
                  mavenCentral()
              }
              dependencies {
                  classpath 'com.android.tools.build:gradle:8.2.0'  # Diperbarui ke versi terbaru
                  classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.20'  # Diperbarui
              }
          }
          
          task clean(type: Delete) {
              delete rootProject.buildDir
          }
          EOF
          
          # Membuat debug signing config (opsional, untuk memastikan debuggable)
          mkdir -p app/src/debug
          cat > app/src/debug/AndroidManifest.xml <<EOF
          <?xml version="1.0" encoding="utf-8"?>
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">
              <application android:debuggable="true" />
          </manifest>
          EOF

      - name: Create Main AndroidManifest.xml
        run: |
          # Membuat direktori utama jika belum ada
          mkdir -p app/src/main
          
          # Membuat file AndroidManifest.xml di src/main
          cat > app/src/main/AndroidManifest.xml <<EOF
          <manifest xmlns:android="http://schemas.android.com/apk/res/android"
              package="com.pekerja.app">
          
              <!-- Izin internet agar Retrofit bisa bekerja -->
              <uses-permission android:name="android.permission.INTERNET" />
          
              <application
                  android:allowBackup="true"
                  android:label="CC-DPI App"
                  android:icon="@mipmap/ic_launcher"
                  android:roundIcon="@mipmap/ic_launcher_round"
                  android:supportsRtl="true"
                  android:theme="@style/Theme.Material3.DayNight.NoActionBar">
                  
                  <activity
                      android:name=".MainActivity"
                      android:exported="true">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
                  
              </application>
          
          </manifest>
          EOF

      - name: Create Minimal Resource Files
        run: |
          # Membuat direktori res minimal untuk menghindari error resource
          mkdir -p app/src/main/res/values
          
          # Buat file strings.xml minimal
          cat > app/src/main/res/values/strings.xml <<EOF
          <resources>
              <string name="app_name">CC-DPI App</string>
          </resources>
          EOF
          
          # Buat file themes.xml minimal (untuk Material 3)
          mkdir -p app/src/main/res/values-night
          cat > app/src/main/res/values/themes.xml <<EOF
          <resources xmlns:tools="http://schemas.android.com/tools">
              <style name="Base.Theme.CcDpi" parent="Theme.Material3.DayNight.NoActionBar">
                  <!-- Customize your theme here -->
              </style>
              <style name="Theme.CcDpi" parent="Base.Theme.CcDpi" />
          </resources>
          EOF
          
          # Salin themes.xml ke values-night (untuk mode malam)
          cp app/src/main/res/values/themes.xml app/src/main/res/values-night/

      - name: Setup Gradle Wrapper
        run: |
          # Hapus wrapper yang ada untuk memastikan fresh start
          rm -f gradlew gradlew.bat
          rm -rf gradle
          
          # Generate new gradle wrapper
          echo "Generating new Gradle wrapper..."
          gradle wrapper --gradle-version 8.4 --distribution-type bin  # Update Gradle version to 8.4 (compatible with AGP 8.2.0)
          
          # Set execute permissions
          chmod +x gradlew
          echo "Set execute permission for gradlew"
          
          # Verify wrapper
          ./gradlew --version

      - name: Build Debug APK
        run: |
          # Sync dan build APK
          ./gradlew :app:assembleDebug --stacktrace --no-daemon

      - name: Verify APK exists
        run: |
          echo "Checking APK path..."
          ls -R app/build/outputs/apk
          if [ ! -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
            echo "APK not found at expected location!"
            exit 1
          fi

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
