name: Android CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  build:
    name: Build & Upload Debug APK
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Install Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools-version: 34.0.0

      - name: Validate project structure
        run: |
          mkdir -p app/src/main/java/com/pekerja/app
          mkdir -p app/src/main/res
          
          # Buat AndroidManifest.xml dengan echo
          if [ ! -f "app/src/main/AndroidManifest.xml" ]; then
            echo '<?xml version="1.0" encoding="utf-8"?>' > app/src/main/AndroidManifest.xml
            echo '<manifest xmlns:android="http://schemas.android.com/apk/res/android"' >> app/src/main/AndroidManifest.xml
            echo '    package="com.pekerja.app">' >> app/src/main/AndroidManifest.xml
            echo '    <uses-permission android:name="android.permission.INTERNET" />' >> app/src/main/AndroidManifest.xml
            echo '    <application' >> app/src/main/AndroidManifest.xml
            echo '        android:allowBackup="true"' >> app/src/main/AndroidManifest.xml
            echo '        android:label="CC-DPI App"' >> app/src/main/AndroidManifest.xml
            echo '        android:icon="@mipmap/ic_launcher"' >> app/src/main/AndroidManifest.xml
            echo '        android:roundIcon="@mipmap/ic_launcher_round"' >> app/src/main/AndroidManifest.xml
            echo '        android:supportsRtl="true"' >> app/src/main/AndroidManifest.xml
            echo '        android:theme="@style/Theme.Material3.DayNight.NoActionBar">' >> app/src/main/AndroidManifest.xml
            echo '        <activity' >> app/src/main/AndroidManifest.xml
            echo '            android:name=".MainActivity"' >> app/src/main/AndroidManifest.xml
            echo '            android:exported="true">' >> app/src/main/AndroidManifest.xml
            echo '            <intent-filter>' >> app/src/main/AndroidManifest.xml
            echo '                <action android:name="android.intent.action.MAIN" />' >> app/src/main/AndroidManifest.xml
            echo '                <category android:name="android.intent.category.LAUNCHER" />' >> app/src/main/AndroidManifest.xml
            echo '            </intent-filter>' >> app/src/main/AndroidManifest.xml
            echo '        </activity>' >> app/src/main/AndroidManifest.xml
            echo '    </application>' >> app/src/main/AndroidManifest.xml
            echo '</manifest>' >> app/src/main/AndroidManifest.xml
          fi

      - name: Setup Gradle Configuration
        run: |
          # Tulis settings.gradle
          echo "pluginManagement {" > settings.gradle
          echo "    repositories {" >> settings.gradle
          echo "        google()" >> settings.gradle
          echo "        mavenCentral()" >> settings.gradle
          echo "        gradlePluginPortal()" >> settings.gradle
          echo "    }" >> settings.gradle
          echo "}" >> settings.gradle
          echo "dependencyResolutionManagement {" >> settings.gradle
          echo "    repositories {" >> settings.gradle
          echo "        google()" >> settings.gradle
          echo "        mavenCentral()" >> settings.gradle
          echo "    }" >> settings.gradle
          echo "}" >> settings.gradle
          echo "rootProject.name = \"cc-dpi\"" >> settings.gradle
          echo "include ':app'" >> settings.gradle

          # Buat direktori app jika belum ada
          mkdir -p app

          # Tulis app/build.gradle
          echo "plugins {" > app/build.gradle
          echo "    id 'com.android.application'" >> app/build.gradle
          echo "    id 'org.jetbrains.kotlin.android'" >> app/build.gradle
          echo "}" >> app/build.gradle
          echo "" >> app/build.gradle
          echo "android {" >> app/build.gradle
          echo "    namespace 'com.pekerja.app'" >> app/build.gradle
          echo "    compileSdk 34" >> app/build.gradle
          echo "" >> app/build.gradle
          echo "    defaultConfig {" >> app/build.gradle
          echo "        applicationId \"com.pekerja.app\"" >> app/build.gradle
          echo "        minSdk 24" >> app/build.gradle
          echo "        targetSdk 34" >> app/build.gradle
          echo "        versionCode 1" >> app/build.gradle
          echo "        versionName \"1.0\"" >> app/build.gradle
          echo "" >> app/build.gradle
          echo "        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"" >> app/build.gradle
          echo "    }" >> app/build.gradle
          echo "" >> app/build.gradle
          echo "    buildTypes {" >> app/build.gradle
          echo "        debug {" >> app/build.gradle
          echo "            minifyEnabled false" >> app/build.gradle
          echo "            signingConfig signingConfigs.debug" >> app/build.gradle
          echo "        }" >> app/build.gradle
          echo "    }" >> app/build.gradle
          echo "" >> app/build.gradle
          echo "    compileOptions {" >> app/build.gradle
          echo "        sourceCompatibility JavaVersion.VERSION_17" >> app/build.gradle
          echo "        targetCompatibility JavaVersion.VERSION_17" >> app/build.gradle
          echo "    }" >> app/build.gradle
          echo "    kotlinOptions {" >> app/build.gradle
          echo "        jvmTarget = '17'" >> app/build.gradle
          echo "    }" >> app/build.gradle
          echo "}" >> app/build.gradle
          echo "" >> app/build.gradle
          echo "dependencies {" >> app/build.gradle
          echo "    implementation 'androidx.core:core-ktx:1.12.0'" >> app/build.gradle
          echo "    implementation 'androidx.appcompat:appcompat:1.6.1'" >> app/build.gradle
          echo "    implementation 'com.google.android.material:material:1.11.0'" >> app/build.gradle
          echo "" >> app/build.gradle
          echo "    testImplementation 'junit:junit:4.13.2'" >> app/build.gradle
          echo "    androidTestImplementation 'androidx.test.ext:junit:1.1.5'" >> app/build.gradle
          echo "}" >> app/build.gradle

          # Tulis build.gradle level project
          echo "buildscript {" > build.gradle
          echo "    repositories {" >> build.gradle
          echo "        google()" >> build.gradle
          echo "        mavenCentral()" >> build.gradle
          echo "    }" >> build.gradle
          echo "    dependencies {" >> build.gradle
          echo "        classpath 'com.android.tools.build:gradle:8.2.0'" >> build.gradle
          echo "        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.22'" >> build.gradle
          echo "    }" >> build.gradle
          echo "}" >> build.gradle
          echo "" >> build.gradle
          echo "task clean(type: Delete) {" >> build.gradle
          echo "    delete rootProject.buildDir" >> build.gradle
          echo "}" >> build.gradle

          # Tulis gradle.properties
          echo "org.gradle.jvmargs=-Xmx4096m -Dfile.encoding=UTF-8" > gradle.properties
          echo "android.useAndroidX=true" >> gradle.properties
          echo "android.enableJetifier=true" >> gradle.properties
          echo "android.suppressUnsupportedCompileSdk=34" >> gradle.properties

          # Tulis debug manifest
          mkdir -p app/src/debug
          echo '<?xml version="1.0" encoding="utf-8"?>' > app/src/debug/AndroidManifest.xml
          echo '<manifest xmlns:android="http://schemas.android.com/apk/res/android">' >> app/src/debug/AndroidManifest.xml
          echo '    <application android:debuggable="true" />' >> app/src/debug/AndroidManifest.xml
          echo '</manifest>' >> app/src/debug/AndroidManifest.xml

      - name: Setup Gradle Wrapper
        run: |
          rm -f gradlew gradlew.bat gradle/wrapper/gradle-wrapper.jar
          gradle wrapper --gradle-version 8.4 --distribution-type bin
          chmod +x gradlew
          ./gradlew --version

      - name: Build Debug APK
        run: |
          ./gradlew :app:assembleDebug --stacktrace --no-daemon

      - name: Verify APK exists
        run: |
          APK_PATH="app/build/outputs/apk/debug/app-debug.apk"
          if [ ! -f "$APK_PATH" ]; then
            echo "APK not found at $APK_PATH"
            echo "Directory structure:"
            find . -name "*.apk" -exec echo "Found APK: {}" \;
            exit 1
          else
            echo "APK generated successfully: $(ls -lh $APK_PATH)"
          fi

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
