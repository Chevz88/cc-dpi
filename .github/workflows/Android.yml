name: Android CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  build:
    name: Build & Upload Debug APK
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Install Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools-version: 34.0.0

      - name: Setup Gradle Wrapper
        run: |
          # Generate gradle wrapper if not exists
          if [ ! -f "gradlew" ]; then
            echo "Generating Gradle wrapper..."
            gradle wrapper --gradle-version 8.0 --distribution-type bin
          else
            echo "Gradle wrapper already exists"
          fi
          
          # Set execute permissions for gradlew
          chmod +x gradlew
          echo "Set execute permission for gradlew"
          
          # Set permissions for gradle directory only if exists
          if [ -d "gradle" ]; then
            chmod -R 755 gradle
            echo "Set permissions for gradle directory"
          else
            echo "gradle directory not found, skipping permission change"
          fi
          
          # Verify wrapper
          ./gradlew --version

      - name: Build Debug APK
        run: ./gradlew :app:assembleDebug --stacktrace --no-daemon

      - name: Find Debug APK
        id: find_apk
        run: |
          echo "Searching for APK..."
          apk_path=$(find app/build/outputs/apk/debug -name "*.apk" | head -n 1)
          if [ -z "$apk_path" ]; then
            echo "APK not found! Listing app/build:"
            ls -R app/build
            exit 1
          fi
          echo "debug_apk=$apk_path" >> $GITHUB_OUTPUT

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: ${{ steps.find_apk.outputs.debug_apk }}
