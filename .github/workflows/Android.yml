name: Android CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  build:
    name: Build & Upload Debug APK
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Install Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools-version: 34.0.0

      - name: Setup Gradle repositories
        run: |
          # Buat atau overwrite settings.gradle untuk memastikan repositori plugin dan dependency benar
          cat > settings.gradle <<EOF
          pluginManagement {
              repositories {
                  google()
                  mavenCentral()
                  gradlePluginPortal()
              }
          }
          dependencyResolutionManagement {
              repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
              repositories {
                  google()
                  mavenCentral()
              }
          }
          rootProject.name = "cc-dpi"
          include ':app'
          EOF

      - name: Setup Gradle Wrapper
        run: |
          # Hapus wrapper yang ada jika tidak lengkap
          if [ ! -f "gradle/wrapper/gradle-wrapper.jar" ]; then
            echo "Re-generating Gradle wrapper (missing jar file)..."
            rm -f gradlew gradlew.bat
            rm -rf gradle
          fi
          
          # Generate gradle wrapper jika belum ada
          if [ ! -f "gradlew" ]; then
            echo "Generating new Gradle wrapper..."
            gradle wrapper --gradle-version 8.0 --distribution-type bin
          else
            echo "Gradle wrapper script exists"
          fi
          
          # Pastikan folder wrapper ada
          if [ ! -d "gradle/wrapper" ]; then
            echo "Creating missing wrapper directory..."
            mkdir -p gradle/wrapper
          fi
          
          # Download gradle-wrapper.jar jika hilang
          if [ ! -f "gradle/wrapper/gradle-wrapper.jar" ]; then
            echo "Downloading missing gradle-wrapper.jar..."
            curl -L https://repo.maven.apache.org/maven2/org/gradle/wrapper/gradle-wrapper/8.0/gradle-wrapper-8.0.jar -o gradle/wrapper/gradle-wrapper.jar
          fi
          
          # Set execute permissions
          chmod +x gradlew
          echo "Set execute permission for gradlew"
          
          # Verify wrapper
          ./gradlew --version

      - name: Build Debug APK
        run: ./gradlew :app:assembleDebug --stacktrace --no-daemon

      - name: Find Debug APK
        id: find_apk
        run: |
          echo "Searching for APK..."
          apk_path=$(find app/build/outputs/apk/debug -name "*.apk" | head -n 1)
          if [ -z "$apk_path" ]; then
            echo "APK not found! Listing app/build:"
            ls -R app/build
            exit 1
          fi
          echo "debug_apk=$apk_path" >> $GITHUB_OUTPUT

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: ${{ steps.find_apk.outputs.debug_apk }}
