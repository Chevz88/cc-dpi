name: Android CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          clean: true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Setup Android SDK (manual)
        run: |
          echo "Accepting Android SDK licenses..."
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Install Gradle
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install gradle 8.0
          gradle --version

      - name: Create settings.gradle
        run: |
          echo -e "pluginManagement {\n\
    repositories {\n\
        google()\n\
        mavenCentral()\n\
        gradlePluginPortal()\n\
    }\n\
}\n\
dependencyResolutionManagement {\n\
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n\
    repositories {\n\
        google()\n\
        mavenCentral()\n\
    }\n\
}\n\
rootProject.name = \"cc-dpi\"\n\
include ':app'" > settings.gradle

      - name: Create root build.gradle
        run: |
          echo -e "buildscript {\n\
    repositories {\n\
        google()\n\
        mavenCentral()\n\
    }\n\
    dependencies {\n\
        classpath \"com.android.tools.build:gradle:8.0.2\"\n\
        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.22\"\n\
    }\n\
}\n\
allprojects {\n\
    repositories {\n\
        google()\n\
        mavenCentral()\n\
    }\n\
}\n\
task clean(type: Delete) {\n\
    delete rootProject.buildDir\n\
}" > build.gradle

      - name: Restructure project
        run: |
          mkdir -p app/src/main
          if [ -d "CC-DPI-App" ]; then
            mv CC-DPI-App/app/build.gradle app/
            mv CC-DPI-App/app/src/* app/src/main/
            rm -rf CC-DPI-App
          fi

      - name: Build Android project
        run: |
          gradle :app:assembleDebug \
            --no-daemon \
            --stacktrace \
            --info

      - name: Find Debug APK
        id: find_apk
        run: |
          debug_apk=$(find app/build/outputs/apk -name "*debug*.apk" | head -1)
          if [ -z "$debug_apk" ]; then
            echo "APK not found! Project structure:"
            find . -maxdepth 3 -type d -print | sort
            exit 1
          fi
          echo "debug_apk=${debug_apk}" >> $GITHUB_OUTPUT
          echo "Debug APK: ${debug_apk}"

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: ${{ steps.find_apk.outputs.debug_apk }}
