name: Android CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  build:
    name: Build & Upload Debug APK
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Install Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools-version: 34.0.0

      - name: Recreate Gradle Wrapper
        run: |
          echo "Downloading Gradle wrapper manually..."
          mkdir -p gradle/wrapper

          curl -s -L -o gradle-zip.zip https://services.gradle.org/distributions/gradle-8.0.2-bin.zip
          unzip -q gradle-zip.zip -d gradle-unpacked

          cp gradle-unpacked/gradle-8.0.2/lib/gradle-launcher-8.0.2.jar gradle/wrapper/gradle-wrapper.jar
          rm -rf gradle-unpacked gradle-zip.zip

          cat <<EOF > gradle/wrapper/gradle-wrapper.properties
          distributionBase=GRADLE_USER_HOME
          distributionPath=wrapper/dists
          distributionUrl=https\\://services.gradle.org/distributions/gradle-8.0.2-bin.zip
          zipStoreBase=GRADLE_USER_HOME
          zipStorePath=wrapper/dists
          EOF

          echo '#!/bin/bash' > gradlew
          echo 'exec java -jar gradle/wrapper/gradle-wrapper.jar "$@"' >> gradlew
          chmod +x gradlew
          chmod -R 755 gradle

      - name: Build Debug APK
        run: ./gradlew :app:assembleDebug --stacktrace --no-daemon

      - name: Find Debug APK
        id: find_apk
        run: |
          echo "Searching for APK..."
          apk_path=$(find app/build/outputs/apk/debug -name "*.apk" | head -n 1)
          echo "debug_apk=$apk_path" >> $GITHUB_OUTPUT

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: ${{ steps.find_apk.outputs.debug_apk }}
