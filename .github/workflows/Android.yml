name: Android CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          clean: true

      - name: Setup Java environment
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Create settings.gradle if missing
        run: |
          if [ ! -f "settings.gradle" ]; then
            echo "Creating settings.gradle..."
            echo "pluginManagement {" > settings.gradle
            echo "    repositories {" >> settings.gradle
            echo "        gradlePluginPortal()" >> settings.gradle
            echo "        google()" >> settings.gradle
            echo "        mavenCentral()" >> settings.gradle
            echo "    }" >> settings.gradle
            echo "}" >> settings.gradle
            echo "dependencyResolutionManagement {" >> settings.gradle
            echo "    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)" >> settings.gradle
            echo "    repositories {" >> settings.gradle
            echo "        google()" >> settings.gradle
            echo "        mavenCentral()" >> settings.gradle
            echo "    }" >> settings.gradle
            echo "}" >> settings.gradle
            echo "rootProject.name = 'cc-dpi'" >> settings.gradle
            echo "include ':CC-DPI-App'" >> settings.gradle
          fi

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew || true
          ./gradlew :CC-DPI-App:app:assembleDebug \
            --refresh-dependencies \
            --no-daemon \
            --stacktrace \
            -Dorg.gradle.daemon=false

      - name: Find Debug APK
        id: find_apk
        run: |
          debug_apk=$(find . -path "*/build/outputs/apk/debug/*.apk" -print -quit)
          echo "debug_apk=${debug_apk}" >> $GITHUB_OUTPUT
          echo "Debug APK: ${debug_apk}"

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: ${{ steps.find_apk.outputs.debug_apk }}
