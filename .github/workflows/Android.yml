name: Android CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  build:
    name: Build & Upload Debug APK
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Install Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools-version: 34.0.0

      - name: Setup Gradle Configuration
        run: |
          # Create minimal build files
          echo "Creating build.gradle and settings.gradle..."
          
          # settings.gradle
          cat > settings.gradle <<EOF
          pluginManagement {
              repositories {
                  google()
                  mavenCentral()
                  gradlePluginPortal()
              }
          }
          dependencyResolutionManagement {
              repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
              repositories {
                  google()
                  mavenCentral()
              }
          }
          rootProject.name = "cc-dpi"
          include ':app'
          EOF
          
          # app/build.gradle
          mkdir -p app
          cat > app/build.gradle <<EOF
          plugins {
              id 'com.android.application'
              id 'org.jetbrains.kotlin.android'
          }
          
          android {
              namespace 'com.example.ccdpi'
              compileSdk 34
              
              defaultConfig {
                  applicationId "com.example.ccdpi"
                  minSdk 24
                  targetSdk 34
                  versionCode 1
                  versionName "1.0"
              }
              
              buildTypes {
                  debug {
                      minifyEnabled false
                  }
              }
          }
          
          dependencies {
              implementation 'androidx.core:core-ktx:1.12.0'
              implementation 'androidx.appcompat:appcompat:1.6.1'
          }
          EOF
          
          # top-level build.gradle
          cat > build.gradle <<EOF
          buildscript {
              repositories {
                  google()
                  mavenCentral()
              }
              dependencies {
                  classpath 'com.android.tools.build:gradle:8.0.2'
                  classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.22'
              }
          }
          
          allprojects {
              repositories {
                  google()
                  mavenCentral()
              }
          }
          
          task clean(type: Delete) {
              delete rootProject.buildDir
          }
          EOF

      - name: Setup Gradle Wrapper
        run: |
          # Hapus wrapper yang ada untuk memastikan fresh start
          rm -f gradlew gradlew.bat
          rm -rf gradle
          
          # Generate new gradle wrapper
          echo "Generating new Gradle wrapper..."
          gradle wrapper --gradle-version 8.0 --distribution-type bin
          
          # Set execute permissions
          chmod +x gradlew
          echo "Set execute permission for gradlew"
          
          # Verify wrapper
          ./gradlew --version

      - name: Show project structure
        run: |
          ls -la
          ls -la app

      - name: Build Debug APK
        run: ./gradlew assembleDebug --stacktrace --no-daemon

      - name: Find Debug APK
        id: find_apk
        run: |
          echo "Searching for APK..."
          apk_path=$(find app/build/outputs/apk/debug -name "*.apk" | head -n 1)
          if [ -z "$apk_path" ]; then
            echo "APK not found! Listing app/build:"
            ls -R app/build
            exit 1
          fi
          echo "debug_apk=$apk_path" >> $GITHUB_OUTPUT

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: ${{ steps.find_apk.outputs.debug_apk }}
